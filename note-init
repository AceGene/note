#!/bin/bash
####
note-init-func () {
	local SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
	local DIR=$(dirname ${SCRIPTPATH}) # TODO hardcoded
	local NOTE_SCR_PATH=~/'bin/note'
	local NOTE_CNFG=~/'.config/notes/config'
	local NOTE_SRC=note-source
	local LINE='[ -f '"${SCRIPTPATH}"'/'"${NOTE_SRC}"' ] && . '"${SCRIPTPATH}"/"${NOTE_SRC}"
	local FILE=~/.bash_aliases
	local INSTALL_NOTES=0
	#### place note cmd script somewhere in PATH
	if [ ! -f "${NOTE_SCR_PATH}" ]; then
		echo "${NOTE_SCR_PATH}" does not exist, creating...
		sudo ln -s "${SCRIPTPATH}"/note "${NOTE_SCR_PATH}"
	fi
	#### add line to .bash_aliases if needed to source NOTE_SRC
	if [ ! -f "${FILE}" ]; then
		echo "${FILE}" does not exist, creating... ; touch "${FILE}"
	fi
	grep -qF -- "$LINE" "$FILE" || (echo "$LINE" >> "$FILE" && echo "${NOTE_SRC}" added to "$FILE")
	#### install notes if not installed already
	type -P notes &>/dev/null || INSTALL_NOTES=1
	if [ ${INSTALL_NOTES} == 1 ] ; then
		echo notes installation will be attempted
		if [ -f ${DIR}/third-party/notes/install.sh ] ; then
			chmod 755 ${DIR}/third-party/notes/install.sh
			sudo bash ${DIR}/third-party/notes/install.sh
		else
			echo notes directory not installed or nothing at ${DIR}/third_party/notes/install.sh
		fi
	fi
	#### config file generation
	if [ ! -f "${NOTE_CNFG}" ]; then
		echo "${NOTE_CNFG}" does not exist, creating...
		sudo ln -s "${SCRIPTPATH}"/config "${NOTE_CNFG}"
	else # TODO take user input and/or make option to remove non symlink file
		test -h "${NOTE_CNFG}" || (rm "${NOTE_CNFG}" ; sudo ln -s "${SCRIPTPATH}"/config "${NOTE_CNFG}")
	fi
}
####
note-init-func ; unset -f note-init-func # removes function from parent scope
